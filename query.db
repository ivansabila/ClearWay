-- Buat FUNCTION untuk update
CREATE OR REPLACE FUNCTION update_timestamp()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Buat TRIGGER di tabel users
CREATE TRIGGER trigger_update_timestamp
BEFORE UPDATE ON users
FOR EACH ROW
EXECUTE FUNCTION update_timestamp();

CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	full_name VARCHAR(100) NOT NULL,
	email VARCHAR(100) NOT NULL,
	phone VARCHAR(12) NOT NULL,
	password VARCHAR(100) NOT NULL,
	image VARCHAR(100) NOT NULL,
	role VARCHAR(50) NOT NULL,
	nik VARCHAR(100),
	birthplace VARCHAR(100),
	birthdate VARCHAR(100),
	address VARCHAR(100), 
	district VARCHAR(100),
	subdistrict VARCHAR(100),
	religion VARCHAR(100),
	job VARCHAR(100),
	ktp VARCHAR(100),
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)

CREATE TABLE books (
	id SERIAL PRIMARY KEY,
	id_user NUMERIC,
	title VARCHAR(100),
	description VARCHAR(250),
	status VARCHAR(50),
	participant VARCHAR(50),
	event VARCHAR(50),
	location TEXT,
	district VARCHAR(100),
	subdistrict VARCHAR(100),
	startdate VARCHAR(100),
	enddate VARCHAR(100),
	starttime VARCHAR(100),
	endtime VARCHAR(100),
	user_letter VARCHAR(100),
	district_letter VARCHAR(100),
	department_letter VARCHAR(100),
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)